#include <stdlib.h>
#include <sys/stat.h>
#include <assert.h>
#include <stdio.h>
#include <fcntl.h>
#include <unistd.h>
#include <string.h>
#include <errno.h>
#include <time.h>

int fd, rnd, i, count;
ssize_t rd, wr;
char w_buf[10]= "testwrite";
struct stat sb;
char* path = "/dev/myzero";

int main(void) {
	char *r_buf;	
	count = 0;
	
	//random number between 0 and 500;
	rnd = (rand() % (500 - 1));		
	r_buf = (char*) malloc(rnd*sizeof(char));
	
	//try to get infos of the path
        int result = stat(path, &sb);

	//checks if path exists
	assert(result >= 0);
	//checks if it's a character device via macro
	assert(S_ISCHR(sb.st_mode));
	
	fd = open("/dev/myzero", O_RDWR);
	if(fd < 0){
		perror("open: ");
		return 1;
	}
	//test: write simply suceedes
	if(write(fd, &w_buf, 10) < 0){
		perror("write: ");
		return 1;
	}
	if(read(fd, r_buf, rnd) < 0){
		perror("read: ");
		return 1;
	}
	// return bufer filed with random 0
	for(i=0; i < rnd;i++){
		count++;
		printf("%d", r_buf[i]);
	}
	assert(rnd == count);
	

	return 0;

}
